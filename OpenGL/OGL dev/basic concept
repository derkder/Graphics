GLclampx: 数据类型，另一种定点型，用于使用定点运算来表示0.0 到 1.0之间的实数
  e.g. clampf:0.0 到 1.0之间的浮点数

GLUT:[openGL Utility Library]
  为窗口管理以及事件处理、IO控制和其他一些服务提供了一个简化的API。
  
GLEW:
  一个跨平台的C++扩展库，方便开发者使用opengl扩展功能。

句柄（handle）：
  Opengl中的资源一般都是用一个句柄（handle）来引用，句柄一般由gl***接口返回，代表一个特定的资源。一个完整的Opengl程序需要创建定点着色器和片段着色器并将他们Link起来组成
  一个完整的OpenGL程序。

VBO:
  CPU 和 GPU 之间传递信息的桥梁，我们把数据存入VBO(这一步在CPU执行)，然后VBO会自动把数据送入GPU。

Uniform:
  一致变量的值在整个draw call中保持不变。这意味着你在draw call之前加载Uniform的值之后，你可以在每一个顶点着色器引入的时候总可以取得相同的值。
 一致变量主要的作用是保存像光照参数（光的位置和方向等）、变换矩阵、材质对象的handle等数据。
  可以在cpp与shader中传递e.g.
      shader.vs中：uniform float gScale;
                   void main(){gl_position=vec4(gScale*position.x,gScale*position.y,.....)}
      main.cpp中将vs fs都塞到shaderProgram链接编译完后：
                   gScaleLocation=glGetUniformLocation(ShaderProgram,"gScale");
                   glUniform1f(gScaleLocation, sinf(Scale));


VAO与VBO:
我们用VBO来存储数据，而用VAO来告诉计算机这些数据分别有什么属性、起什么作用。（所以这里的A也可以解释做Attribute）
