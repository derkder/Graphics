https://blog.csdn.net/the_shy33/article/details/120043177
Unity内部也是用shadowmap的变种 CSM(Cascaded Shadowmap)和SSSM(Screen Space Shadowmap)**的两种阴影。

shadowmap的粗略原理：
  首先它在！！光源处！！放置一台相机，通过该相机生成一张深度图
  然后在渲染【需要接受阴影的物体】时把当前渲染的点的深度与深度图里的深度比较。
  
  
  
shadowmap的具体原理：
  1.获取灯光空间中场景深度图
  2.接受阴影的模型，需！！将顶点信息变换到灯光投影空间中！！，！！然后对比当前片元深度和深度图的深度！！，深度比较深度图的大，则在阴影中。
  
  
  
shadowmap的优化：pcf算法抗锯齿（解决硬阴影）
  通过多次采样点的周围来判断该点阴影位置的权重，最后进行阴影系数的改变




shadowmap的具体实现：【https://blog.csdn.net/l364244206】
SM算法是一个2-pass绘制算法，第一pass从光源视点绘制场景，生成SM纹理，第2pass从视点视图按常规方法绘制场景
